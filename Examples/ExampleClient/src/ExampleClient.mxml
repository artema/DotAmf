<?xml version="1.0" encoding="utf-8"?>
<s:Application 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	minWidth="955" minHeight="600"
>
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" />
	</s:layout>
	
	<fx:Declarations>
		<!-- Destination names are not supported by the service, but one is always required by the RemoteObject. -->
		<s:RemoteObject 
			id="myService" 
			endpoint="{SERVICE_ENDPOINT}"
			destination="MyService"
			result="onResult(event)"
			fault="onFault(event)"
			makeObjectsBindable="true" />
	</fx:Declarations>
	
	<s:HGroup 
		width="100%"
		enabled="{!isBusy}"
	>
		<s:Button label="GetAllProducts()" click="callProcedure('GetAllProducts')" />
		<s:Button label="GetUser(3)" click="callProcedure('GetUser', 3)" />
		<s:Button label="AddUser(user)" click="callProcedure('AddUser', new User(3))" />
		<s:Button label="SendContent(content)" click="callProcedure('SendContent', generateContent())" />
		<s:Button label="SendGraph(user)" click="callProcedure('SendGraph', generateObjectGraph())" />
		<s:Button label="DoStuff()" click="callProcedure('DoStuff')" />
		<s:Button label="DoFault()" click="callProcedure('DoFault')" />
	</s:HGroup>
	
	<mx:ProgressBar 
		width="200"
		height="10"
		labelPlacement="center"
		label=" "
		indeterminate="true"
		visible="{isBusy}" />
	
	<mx:TabNavigator 
		id="outputTabs" 
		width="100%" 
		height="100%"
		enabled="{!isBusy}"
		creationPolicy="all"
	>
		<s:NavigatorContent label="Result" width="100%" height="100%">
			<s:TextArea 
				id="txtResult" 
				width="100%" 
				height="100%"
				editable="false" />
		</s:NavigatorContent>
		<s:NavigatorContent label="Fault" width="100%" height="100%">
			<s:TextArea 
				id="txtFault" 
				width="100%" 
				height="100%"
				editable="false" />
		</s:NavigatorContent>
	</mx:TabNavigator>

	<fx:Script>
		<![CDATA[
			import domain.*;
			
			import mx.controls.Alert;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.*;
			import mx.utils.ObjectUtil;
			
			private static const SERVICE_ENDPOINT:String = "http://{server.name}:{server.port}/MyService.svc";
			
			[Bindable] private var isBusy:Boolean;
			
			private function callProcedure(name:String, ... args:Array):void
			{
				if (isBusy) return;
				isBusy = true;
				
				var operation:AbstractOperation = myService.getOperation(name);
				
				if (args.length > 0)
					operation.send.apply(null, args);
				else
					operation.send();
			}
			
			private function onResult(e:ResultEvent):void
			{
				isBusy = false;
				
				txtResult.text = ObjectUtil.toString(e.result);
				txtFault.text = null;
				
				outputTabs.selectedIndex = 0;
			}
			
			private function onFault(e:FaultEvent):void
			{
				isBusy = false;
				
				txtResult.text = null;
				txtFault.text = ObjectUtil.toString(e);
				
				outputTabs.selectedIndex = 1;
				
				var error:ErrorMessage = e.message as ErrorMessage;
				
				if (error != null && error.extendedData != null)
					Alert.show(ObjectUtil.toString(error.extendedData), "Custom fault object received");
			}	
			
			private function generateContent():Content
			{
				var data:ByteArray = new ByteArray();
				data.writeInt(123);
				
				var xml:XML = <xml>
					<node attribute="1">content</node>
				</xml>;
				
				var content:Content = new Content();
				content.data = data;
				content.xml = xml;
				return content;
			}
			
			private function generateObjectGraph():Array
			{
				var user1:User = new User(1);
				user1.name = "User #1";
				user1.is_active = true;
				user1.products = [
					new ProductDto(91),
					new ProductDto(92)
				];
				
				user1.products.push(user1.products[0]);
				
				var user2:User = new User(2);
				user2.name = "User #2";
				user2.is_active = true;
				user2.products = user1.products;
				
				return [user1,user1,user2];
			}
		]]>
	</fx:Script>
</s:Application>
